<<<<<<< HEAD
<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Notes on ⚽️</title>
    <link>http://mylofi.fun/tags/notes/</link>
    <description>Recent content in Notes on ⚽️</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 13 Jul 2022 21:27:03 +0800</lastBuildDate>
    <atom:link href="http://mylofi.fun/tags/notes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>面经记录</title>
      <link>http://mylofi.fun/posts/interview/</link>
      <pubDate>Wed, 13 Jul 2022 21:27:03 +0800</pubDate>
      <guid>http://mylofi.fun/posts/interview/</guid>
      <description>&lt;h3 class=&#34;heading&#34; id=&#34;vue-相关&#34;&gt;&#xA;  vue 相关&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#vue-%e7%9b%b8%e5%85%b3&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;mixin&lt;/code&gt; 相关场景以及利弊，拥有多个属性时的执行顺序，&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;v-model&lt;/code&gt; 原理，在下拉选择器组件中是怎么实现的&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;filter&lt;/code&gt; 怎么实现，使用场景&lt;/li&gt;&#xA;&lt;li&gt;插槽的实现原理，如何传值&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;v-for&lt;/code&gt; 中 &lt;code&gt;key&lt;/code&gt; 的作用，延伸到 &lt;code&gt;diff&lt;/code&gt; 实现，不同位置的比较&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;vnode&lt;/code&gt; 概念&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;v-if&lt;/code&gt; 控制 &lt;code&gt;dom&lt;/code&gt; 显隐时， &lt;code&gt;vdom&lt;/code&gt; 是如何处理的&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;watch&lt;/code&gt; 监听是的 &lt;code&gt;deep: true&lt;/code&gt; 实现原理&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;nextTick&lt;/code&gt; 原理&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;computed&lt;/code&gt; 和 &lt;code&gt;watch&lt;/code&gt; 的区别&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Vue.use&lt;/code&gt; 和 &lt;code&gt;Vue.install&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Vue&lt;/code&gt; 中手动 &lt;code&gt;extend&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;data&lt;/code&gt; 中的属性是定义在 &lt;code&gt;MVVM&lt;/code&gt; 中的哪个环节&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 class=&#34;heading&#34; id=&#34;css-相关&#34;&gt;&#xA;  css 相关&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#css-%e7%9b%b8%e5%85%b3&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;回流和重绘的概念，绝对定位是否会导致回流&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;flex: 1&lt;/code&gt; 的分别代表什么属性以及作用&lt;/li&gt;&#xA;&lt;li&gt;伪元素和伪类的区别，分别有哪些&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;visibility: hidden&lt;/code&gt; 和 &lt;code&gt;opacity&lt;/code&gt; 是否触发点击事件&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 class=&#34;heading&#34; id=&#34;js-相关&#34;&gt;&#xA;  js 相关&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#js-%e7%9b%b8%e5%85%b3&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;let/const/var&lt;/code&gt; 区别，用 &lt;code&gt;const&lt;/code&gt; 声明对象时，是否可以改变对象的属性值，为什么&lt;/li&gt;&#xA;&lt;li&gt;深度优先搜索和广度优先搜索&lt;/li&gt;&#xA;&lt;li&gt;如何证明 &lt;code&gt;js&lt;/code&gt; 对象里存在循环引用&lt;/li&gt;&#xA;&lt;li&gt;类型判断的方法，&lt;code&gt;typeof&lt;/code&gt; 对象的类属性&lt;/li&gt;&#xA;&lt;li&gt;实例对象是否是 &lt;code&gt;Function&lt;/code&gt; ，&lt;code&gt;instanceof Function&lt;/code&gt; 结果&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;promise&lt;/code&gt; 执行顺序，事件循环&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;es5&lt;/code&gt; 模拟 &lt;code&gt;class&lt;/code&gt; 的实现&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;localStorage&lt;/code&gt; 如何实现过期时间&lt;/li&gt;&#xA;&lt;li&gt;手机号正则&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 class=&#34;heading&#34; id=&#34;工程化相关&#34;&gt;&#xA;  工程化相关&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b7%a5%e7%a8%8b%e5%8c%96%e7%9b%b8%e5%85%b3&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;介绍 &lt;code&gt;webpack&lt;/code&gt; 常用的配置以及功能&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;webpack&lt;/code&gt; 多页面有多个入口时如何配置&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;source-map&lt;/code&gt; 分类，如何配置和调试&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;webpack&lt;/code&gt; 中怎么隔离 &lt;code&gt;css&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;性能优化方案，代码/打包/资源加载方面&lt;/li&gt;&#xA;&lt;li&gt;热更新原理&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 class=&#34;heading&#34; id=&#34;概念类问题&#34;&gt;&#xA;  概念类问题&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%a6%82%e5%bf%b5%e7%b1%bb%e9%97%ae%e9%a2%98&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;http/https&lt;/code&gt; 区别&lt;/li&gt;&#xA;&lt;li&gt;介绍 &lt;code&gt;options&lt;/code&gt; 请求的意义&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;MVVM/MVC&lt;/code&gt; 的区别，如何实现一个 &lt;code&gt;MVVM&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;简述 &lt;code&gt;XSS&lt;/code&gt; 和 &lt;code&gt;CSRF&lt;/code&gt; 的概念，并列举几种安全防范策略&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 class=&#34;heading&#34; id=&#34;编程题&#34;&gt;&#xA;  编程题&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%bc%96%e7%a8%8b%e9%a2%98&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;编写一个函数，大小写字母取反&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;font-weight:bold;text-decoration:underline&#34;&gt;const&lt;/span&gt; fn = (string) =&amp;gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;font-weight:bold;font-style:italic;text-decoration:underline&#34;&gt;let&lt;/span&gt; ans = &lt;span style=&#34;color:#666;font-style:italic&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;font-weight:bold;text-decoration:underline&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;font-weight:bold;font-style:italic;text-decoration:underline&#34;&gt;let&lt;/span&gt; v &lt;span style=&#34;font-weight:bold;text-decoration:underline&#34;&gt;of&lt;/span&gt; string) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ans += v.toLowerCase() === v ? v.toUpperCase() : v.toLowerCase()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;font-weight:bold;text-decoration:underline&#34;&gt;return&lt;/span&gt; ans&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;编写一个函数，输入 &lt;code&gt;int&lt;/code&gt; 型，返回整数逆序后的字符串&lt;/li&gt;&#xA;&lt;li&gt;二维数组扁平化，返回一个去重且是升序的一维数组&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 class=&#34;heading&#34; id=&#34;场景题&#34;&gt;&#xA;  场景题&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9c%ba%e6%99%af%e9%a2%98&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;数据多、加载慢的解决方式&#xA;&lt;ul&gt;&#xA;&lt;li&gt;缓存&lt;/li&gt;&#xA;&lt;li&gt;懒加载&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;生产环境发布后，发现客户那边并没有更新到最新版，从哪些方面排查？&#xA;&lt;ul&gt;&#xA;&lt;li&gt;时间戳保持最新&lt;/li&gt;&#xA;&lt;li&gt;强缓存/协商缓存&lt;/li&gt;&#xA;&lt;li&gt;禁止缓存&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;axios&lt;/code&gt; 需要对所有接口进行增加请求头之类的字段时，怎么处理？&lt;/li&gt;&#xA;&lt;li&gt;一个按钮含有异步请求，如何防止多次点击重复提交？&#xA;&lt;ul&gt;&#xA;&lt;li&gt;防抖及其实现，引申节流，描述区别及使用场景&lt;/li&gt;&#xA;&lt;li&gt;增加禁用属性，&lt;code&gt;loading/disabled&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;a 页面跳转到 b 页面然后重定向到 c 页面，可能会在 b 页面做登录逻辑或者记录数据（相当于一个中转页），&#xA;但是用户可能直接在地址栏里输入 c 页面，怎么防止这个情况？&#xA;&lt;ul&gt;&#xA;&lt;li&gt;路由守卫&lt;/li&gt;&#xA;&lt;li&gt;导航拦截如何实现&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;同一个浏览器，不同标签之间数据传递的方法，简单列举&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 class=&#34;heading&#34; id=&#34;发散性问题&#34;&gt;&#xA;  发散性问题&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8f%91%e6%95%a3%e6%80%a7%e9%97%ae%e9%a2%98&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;职业规划&lt;/li&gt;&#xA;&lt;li&gt;怎么制定技术方案，从哪几个方面考虑&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
  </channel>
=======
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>notes - 标签 - Mylo</title>
        <link>http://flyingmylo.com/tags/notes/</link>
        <description>notes - 标签 - Mylo</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Wed, 13 Jul 2022 21:27:03 &#43;0800</lastBuildDate><atom:link href="http://flyingmylo.com/tags/notes/" rel="self" type="application/rss+xml" /><item>
    <title>面经记录</title>
    <link>http://flyingmylo.com/posts/interview/</link>
    <pubDate>Wed, 13 Jul 2022 21:27:03 &#43;0800</pubDate>
    <author>Mylo</author>
    <guid>http://flyingmylo.com/posts/interview/</guid>
    <description><![CDATA[vue 相关  mixin 相关场景以及利弊，拥有多个属性时的执行顺序， v-model 原理，在下拉选择器组件中是怎么实现的 filter 怎么实现，使用场景 插槽的实现原理，如何传值 v-for 中 key 的作用，延伸到 diff 实现，不同位置的比较 vnode 概念 v-if 控制 dom 显隐时， vdom 是如何处理的 watch 监听是的 deep: true 实现原理 nextTick 原理 computed 和 watch 的区别 Vue.use 和 Vue.install Vue 中手动 extend data 中的属性是定义在 MVVM 中的哪个环节  css 相关  回流和重绘的概念，绝对定位是否会导致回流 flex: 1 的分别代表什么属性以及作用 伪元素和伪类的区别，分别有哪些 visibility: hidden 和 opacity 是否触发点击事件  js 相关  let/const/var 区别，用 const 声明对象时，是否可以改变对象的属性值，为什么 深度优先搜索和广度优先搜索 如何证明 js 对象里存在循环引用 类型判断的方法，typeof 对象的类属性 实例对象是否是 Function ，instanceof Function 结果 promise 执行顺序，事件循环 es5 模拟 class 的实现 localStorage 如何实现过期时间 手机号正则  工程化相关  介绍 webpack 常用的配置以及功能 webpack 多页面有多个入口时如何配置 source-map 分类，如何配置和调试 webpack 中怎么隔离 css 性能优化方案，代码/打包/资源加载方面 热更新原理  概念类问题  http/https 区别 介绍 options 请求的意义 MVVM/MVC 的区别，如何实现一个 MVVM 简述 XSS 和 CSRF 的概念，并列举几种安全防范策略  编程题  编写一个函数，大小写字母取反  const fn = (string) =&gt; { let ans = &#39;&#39; for (let v of string) { ans += v.]]></description>
</item>
</channel>
>>>>>>> 70fc96867e523bbae0b684b0084ffcf7670583c3
</rss>
